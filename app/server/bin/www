const debug = require('debug')('costner-quiz-project:server'),
    http = require('http'),
    path = require('path'),
    envMode = process.env.MODE || 'test';

// setting root & public pathes
process.env.ROOT = path.join(__dirname, '../../..');
process.env.PUBLIC_PATH = path.join(__dirname, '../../client/public');

// load all config variables
const dotenv = require('dotenv');
dotenv.config({ path: `./app/server/config/.env.${envMode}` });

const app = require('../app'),
    port = normalizePort(process.env.PORT || '3000');

app.set('port', port);

const server = http.createServer(app);

server
    .on('error', onError)
    .on('listening', onListening)
    .listen(port);

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
    return port;
  }

  return false;
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
  console.log(`Running app in ${envMode} MODE on port ${port}`);
}
